JFLEX_FILE
  JFlexUserCodeSectionImpl(FLEX_USER_CODE_SECTION)
    JFlexJavaCodeImpl(FLEX_JAVA_CODE)
      PsiElement(code block)('/* It's an automatically generated code. Do not modify it. */\npackage sample.lexer;\n\n')
  PsiElement(%%)('%%')
  PsiWhiteSpace('\n')
  JFlexDeclarationsSectionImpl(FLEX_DECLARATIONS_SECTION)
    JFlexOptionImpl(FLEX_OPTION)
      PsiElement(%{)('%{')
      PsiWhiteSpace('\n')
      JFlexJavaCodeImpl(FLEX_JAVA_CODE)
        PsiElement(code block)('  private int lBraceCount;\n')
      PsiElement(%})('%}')
    PsiWhiteSpace('\n\n')
    JFlexOptionImpl(FLEX_OPTION)
      PsiElement(%{)('%{')
      PsiComment(line_comment)(' // empty user code')
      PsiWhiteSpace('\n')
      JFlexJavaCodeImpl(FLEX_JAVA_CODE)
        <empty list>
      PsiElement(%})('%}')
    PsiWhiteSpace('\n\n')
    JFlexOptionImpl(FLEX_OPTION)
      PsiElement(%class)('%class')
      PsiWhiteSpace(' ')
      JFlexJavaTypeImpl(FLEX_JAVA_TYPE)
        JFlexJavaNameImpl(FLEX_JAVA_NAME)
          PsiElement(id)('X')
        JFlexJavaTypeParametersImpl(FLEX_JAVA_TYPE_PARAMETERS)
          PsiElement(<)('<')
          JFlexJavaTypeImpl(FLEX_JAVA_TYPE)
            JFlexJavaNameImpl(FLEX_JAVA_NAME)
              PsiElement(id)('A')
          PsiElement(,)(',')
          PsiWhiteSpace(' ')
          JFlexJavaTypeImpl(FLEX_JAVA_TYPE)
            JFlexJavaNameImpl(FLEX_JAVA_NAME)
              PsiElement(id)('B')
            JFlexJavaTypeParametersImpl(FLEX_JAVA_TYPE_PARAMETERS)
              PsiElement(<)('<')
              JFlexJavaTypeImpl(FLEX_JAVA_TYPE)
                JFlexJavaNameImpl(FLEX_JAVA_NAME)
                  PsiElement(id)('C')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              JFlexJavaTypeImpl(FLEX_JAVA_TYPE)
                JFlexJavaNameImpl(FLEX_JAVA_NAME)
                  PsiElement(id)('D')
              PsiElement(>)('>')
          PsiElement(>)('>')
    PsiWhiteSpace('\n')
    JFlexOptionImpl(FLEX_OPTION)
      PsiElement(%implements)('%implements')
      PsiWhiteSpace(' ')
      JFlexJavaTypeImpl(FLEX_JAVA_TYPE)
        JFlexJavaNameImpl(FLEX_JAVA_NAME)
          PsiElement(id)('Y')
        JFlexJavaTypeParametersImpl(FLEX_JAVA_TYPE_PARAMETERS)
          PsiElement(<)('<')
          JFlexJavaTypeImpl(FLEX_JAVA_TYPE)
            JFlexJavaNameImpl(FLEX_JAVA_NAME)
              PsiElement(id)('A')
          PsiElement(,)(',')
          PsiWhiteSpace(' ')
          JFlexJavaTypeImpl(FLEX_JAVA_TYPE)
            JFlexJavaNameImpl(FLEX_JAVA_NAME)
              PsiElement(id)('B')
            JFlexJavaTypeParametersImpl(FLEX_JAVA_TYPE_PARAMETERS)
              PsiElement(<)('<')
              JFlexJavaTypeImpl(FLEX_JAVA_TYPE)
                JFlexJavaNameImpl(FLEX_JAVA_NAME)
                  PsiElement(id)('C')
              PsiElement(,)(',')
              PsiWhiteSpace(' ')
              JFlexJavaTypeImpl(FLEX_JAVA_TYPE)
                JFlexJavaNameImpl(FLEX_JAVA_NAME)
                  PsiElement(id)('D')
              PsiElement(>)('>')
          PsiElement(>)('>')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      JFlexJavaTypeImpl(FLEX_JAVA_TYPE)
        JFlexJavaNameImpl(FLEX_JAVA_NAME)
          PsiElement(id)('B')
        JFlexJavaTypeParametersImpl(FLEX_JAVA_TYPE_PARAMETERS)
          PsiElement(<)('<')
          JFlexJavaTypeImpl(FLEX_JAVA_TYPE)
            JFlexJavaNameImpl(FLEX_JAVA_NAME)
              PsiElement(id)('C')
          PsiElement(,)(',')
          PsiWhiteSpace(' ')
          JFlexJavaTypeImpl(FLEX_JAVA_TYPE)
            JFlexJavaNameImpl(FLEX_JAVA_NAME)
              PsiElement(id)('D')
          PsiElement(>)('>')
    PsiWhiteSpace('\n\n')
    JFlexStateDeclarationImpl(FLEX_STATE_DECLARATION)
      PsiElement(%state)('%state')
      PsiWhiteSpace(' ')
      JFlexStateDefinitionImpl(FLEX_STATE_DEFINITION)
        PsiElement(id)('STATE')
      PsiElement(,)(',')
      PsiWhiteSpace(' ')
      JFlexStateDefinitionImpl(FLEX_STATE_DEFINITION)
        PsiElement(id)('STATE2')
      PsiElement(,)(',')
    PsiWhiteSpace('\n\n')
    JFlexMacroDefinitionImpl(FLEX_MACRO_DEFINITION)
      PsiElement(id)('FUNCTION')
      PsiWhiteSpace('        ')
      PsiElement(=)('=')
      PsiWhiteSpace(' ')
      JFlexSequenceExpressionImpl(FLEX_SEQUENCE_EXPRESSION)
        JFlexClassExpressionImpl(FLEX_CLASS_EXPRESSION)
          PsiElement([)('[')
          PsiElement(char)('_')
          JFlexCharRangeImpl(FLEX_CHAR_RANGE)
            PsiElement(char)('a')
            PsiElement(-)('-')
            PsiElement(char)('z')
          JFlexCharRangeImpl(FLEX_CHAR_RANGE)
            PsiElement(char)('A')
            PsiElement(-)('-')
            PsiElement(char)('Z')
          PsiElement(])(']')
        JFlexQuantifierExpressionImpl(FLEX_QUANTIFIER_EXPRESSION)
          JFlexQuantifierExpressionImpl(FLEX_QUANTIFIER_EXPRESSION)
            JFlexParenExpressionImpl(FLEX_PAREN_EXPRESSION)
              PsiElement(()('(')
              JFlexClassExpressionImpl(FLEX_CLASS_EXPRESSION)
                PsiElement([)('[')
                PsiElement(char)('$')
                PsiElement(char)('_')
                JFlexCharRangeImpl(FLEX_CHAR_RANGE)
                  PsiElement(char)('a')
                  PsiElement(-)('-')
                  PsiElement(char)('z')
                JFlexCharRangeImpl(FLEX_CHAR_RANGE)
                  PsiElement(char)('A')
                  PsiElement(-)('-')
                  PsiElement(char)('Z')
                JFlexCharRangeImpl(FLEX_CHAR_RANGE)
                  PsiElement(char)('0')
                  PsiElement(-)('-')
                  PsiElement(char)('9')
                PsiElement(])(']')
              PsiElement())(')')
            PsiElement(*)('*')
          PsiElement(?)('?')
        JFlexClassExpressionImpl(FLEX_CLASS_EXPRESSION)
          PsiElement([)('[')
          PsiElement(char)(':')
          PsiElement(])(']')
        JFlexQuantifierExpressionImpl(FLEX_QUANTIFIER_EXPRESSION)
          JFlexQuantifierExpressionImpl(FLEX_QUANTIFIER_EXPRESSION)
            JFlexParenExpressionImpl(FLEX_PAREN_EXPRESSION)
              PsiElement(()('(')
              JFlexClassExpressionImpl(FLEX_CLASS_EXPRESSION)
                PsiElement([)('[')
                PsiElement(^)('^')
                PsiElement(char_esc)('\n')
                PsiElement(char_esc)('\r')
                PsiElement(])(']')
              PsiElement())(')')
            PsiElement(*)('*')
          PsiElement(?)('?')
        JFlexParenExpressionImpl(FLEX_PAREN_EXPRESSION)
          PsiElement(()('(')
          JFlexChoiceExpressionImpl(FLEX_CHOICE_EXPRESSION)
            JFlexSequenceExpressionImpl(FLEX_SEQUENCE_EXPRESSION)
              JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
                PsiElement(char)('-')
              JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
                PsiElement(char)('>')
            PsiElement(|)('|')
            JFlexSequenceExpressionImpl(FLEX_SEQUENCE_EXPRESSION)
              JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
                PsiElement(char)('=')
              JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
                PsiElement(char)('>')
          PsiElement())(')')
    PsiWhiteSpace('\n')
    JFlexMacroDefinitionImpl(FLEX_MACRO_DEFINITION)
      PsiElement(id)('NOTTAGORCOMMENTBEGIN')
      PsiWhiteSpace(' ')
      PsiElement(=)('=')
      PsiWhiteSpace(' ')
      JFlexParenExpressionImpl(FLEX_PAREN_EXPRESSION)
        PsiElement(()('(')
        JFlexChoiceExpressionImpl(FLEX_CHOICE_EXPRESSION)
          JFlexSequenceExpressionImpl(FLEX_SEQUENCE_EXPRESSION)
            JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
              PsiElement(string)('"<"')
            JFlexClassExpressionImpl(FLEX_CLASS_EXPRESSION)
              PsiElement([)('[')
              PsiElement(^)('^')
              PsiElement(char)('c')
              PsiElement(char)('/')
              PsiElement(char)('C')
              PsiElement(char)('!')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(|)('|')
          PsiWhiteSpace(' ')
          JFlexSequenceExpressionImpl(FLEX_SEQUENCE_EXPRESSION)
            JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
              PsiElement(string)('"<c"')
            JFlexClassExpressionImpl(FLEX_CLASS_EXPRESSION)
              PsiElement([)('[')
              PsiElement(^)('^')
              PsiElement(char)('fF')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(|)('|')
          PsiWhiteSpace(' ')
          JFlexSequenceExpressionImpl(FLEX_SEQUENCE_EXPRESSION)
            JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
              PsiElement(string)('"<C"')
            JFlexClassExpressionImpl(FLEX_CLASS_EXPRESSION)
              PsiElement([)('[')
              PsiElement(^)('^')
              PsiElement(char)('fF')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(|)('|')
          PsiWhiteSpace(' ')
          JFlexSequenceExpressionImpl(FLEX_SEQUENCE_EXPRESSION)
            JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
              PsiElement(string)('"</"')
            JFlexClassExpressionImpl(FLEX_CLASS_EXPRESSION)
              PsiElement([)('[')
              PsiElement(^)('^')
              PsiElement(char)('Cc')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(|)('|')
          PsiWhiteSpace(' ')
          JFlexSequenceExpressionImpl(FLEX_SEQUENCE_EXPRESSION)
            JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
              PsiElement(string)('"</c"')
            JFlexClassExpressionImpl(FLEX_CLASS_EXPRESSION)
              PsiElement([)('[')
              PsiElement(^)('^')
              PsiElement(char)('Ff')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(|)('|')
          PsiWhiteSpace(' ')
          JFlexSequenceExpressionImpl(FLEX_SEQUENCE_EXPRESSION)
            JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
              PsiElement(string)('"</C"')
            JFlexClassExpressionImpl(FLEX_CLASS_EXPRESSION)
              PsiElement([)('[')
              PsiElement(^)('^')
              PsiElement(char)('fF')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(|)('|')
          PsiWhiteSpace('\n')
          PsiWhiteSpace('             ')
          JFlexSequenceExpressionImpl(FLEX_SEQUENCE_EXPRESSION)
            JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
              PsiElement(string)('"<!"')
            JFlexClassExpressionImpl(FLEX_CLASS_EXPRESSION)
              PsiElement([)('[')
              PsiElement(^)('^')
              PsiElement(char)('-')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(|)('|')
          PsiWhiteSpace(' ')
          JFlexSequenceExpressionImpl(FLEX_SEQUENCE_EXPRESSION)
            JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
              PsiElement(string)('"<!-"')
            JFlexClassExpressionImpl(FLEX_CLASS_EXPRESSION)
              PsiElement([)('[')
              PsiElement(^)('^')
              PsiElement(char)('-')
              PsiElement(])(']')
          PsiWhiteSpace(' ')
          PsiElement(|)('|')
          PsiWhiteSpace(' ')
          JFlexSequenceExpressionImpl(FLEX_SEQUENCE_EXPRESSION)
            JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
              PsiElement(string)('"<!--"')
            JFlexClassExpressionImpl(FLEX_CLASS_EXPRESSION)
              PsiElement([)('[')
              PsiElement(^)('^')
              PsiElement(char)('-')
              PsiElement(])(']')
        PsiElement())(')')
    PsiWhiteSpace('\n')
    JFlexStateDeclarationImpl(FLEX_STATE_DECLARATION)
      PsiElement(%xstate)('%x')
      PsiWhiteSpace(' ')
      JFlexStateDefinitionImpl(FLEX_STATE_DEFINITION)
        PsiElement(id)('STAT')
    PsiWhiteSpace('\n')
    JFlexStateDeclarationImpl(FLEX_STATE_DECLARATION)
      PsiElement(%state)('%s')
      PsiWhiteSpace(' ')
      JFlexStateDefinitionImpl(FLEX_STATE_DEFINITION)
        PsiElement(id)('STAT')
    PsiWhiteSpace('\n')
    JFlexOptionImpl(FLEX_OPTION)
      PsiElement(%{)('%{')
      PsiWhiteSpace('\n')
      JFlexJavaCodeImpl(FLEX_JAVA_CODE)
        PsiElement(code block)('String escapes="\\ \n \r \t \f" + '\\' + '\n' + '\r' + '\t' + '\f' ;\n')
      PsiElement(%})('%}')
    PsiWhiteSpace('\n\n')
    JFlexMacroDefinitionImpl(FLEX_MACRO_DEFINITION)
      PsiElement(id)('ID_CHAR')
      PsiWhiteSpace(' ')
      PsiElement(=)('=')
      PsiWhiteSpace(' ')
      JFlexClassExpressionImpl(FLEX_CLASS_EXPRESSION)
        PsiElement([)('[')
        JFlexCharRangeImpl(FLEX_CHAR_RANGE)
          PsiElement(char)('a')
          PsiElement(-)('-')
          PsiElement(char)('z')
        JFlexCharRangeImpl(FLEX_CHAR_RANGE)
          PsiElement(char)('A')
          PsiElement(-)('-')
          PsiElement(char)('Z')
        PsiElement(char)('_')
        JFlexCharRangeImpl(FLEX_CHAR_RANGE)
          PsiElement(char)('0')
          PsiElement(-)('-')
          PsiElement(char)('9')
        PsiElement(char)('-')
        PsiElement(])(']')
    PsiWhiteSpace('\n')
    JFlexMacroDefinitionImpl(FLEX_MACRO_DEFINITION)
      PsiElement(id)('INT_LITERAL')
      PsiWhiteSpace(' ')
      PsiElement(=)('=')
      PsiWhiteSpace(' ')
      JFlexSequenceExpressionImpl(FLEX_SEQUENCE_EXPRESSION)
        JFlexQuantifierExpressionImpl(FLEX_QUANTIFIER_EXPRESSION)
          JFlexClassExpressionImpl(FLEX_CLASS_EXPRESSION)
            PsiElement([)('[')
            PsiElement(char)('-')
            PsiElement(char)('+')
            PsiElement(])(']')
          PsiElement(?)('?')
        JFlexQuantifierExpressionImpl(FLEX_QUANTIFIER_EXPRESSION)
          JFlexClassExpressionImpl(FLEX_CLASS_EXPRESSION)
            PsiElement([)('[')
            JFlexCharRangeImpl(FLEX_CHAR_RANGE)
              PsiElement(char)('0')
              PsiElement(-)('-')
              PsiElement(char)('9')
            PsiElement(])(']')
          PsiElement(+)('+')
    PsiWhiteSpace('\n')
    JFlexMacroDefinitionImpl(FLEX_MACRO_DEFINITION)
      PsiElement(id)('EXPONENT_PART')
      PsiElement(=)('=')
      JFlexSequenceExpressionImpl(FLEX_SEQUENCE_EXPRESSION)
        JFlexClassExpressionImpl(FLEX_CLASS_EXPRESSION)
          PsiElement([)('[')
          PsiElement(char)('Ee')
          PsiElement(])(']')
        JFlexQuantifierExpressionImpl(FLEX_QUANTIFIER_EXPRESSION)
          JFlexClassExpressionImpl(FLEX_CLASS_EXPRESSION)
            PsiElement([)('[')
            PsiElement(char)('+')
            PsiElement(char)('-')
            PsiElement(])(']')
          PsiElement(?)('?')
        JFlexQuantifierExpressionImpl(FLEX_QUANTIFIER_EXPRESSION)
          JFlexClassExpressionImpl(FLEX_CLASS_EXPRESSION)
            PsiElement([)('[')
            JFlexCharRangeImpl(FLEX_CHAR_RANGE)
              PsiElement(char)('0')
              PsiElement(-)('-')
              PsiElement(char)('9')
            PsiElement(])(']')
          PsiElement(+)('+')
    PsiWhiteSpace('\n')
    JFlexMacroDefinitionImpl(FLEX_MACRO_DEFINITION)
      PsiElement(id)('ZENDCOMMENT')
      PsiElement(=)('=')
      JFlexSequenceExpressionImpl(FLEX_SEQUENCE_EXPRESSION)
        JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
          PsiElement(char)(';')
        JFlexMacroRefExpressionImpl(FLEX_MACRO_REF_EXPRESSION)
          PsiElement({)('{')
          JFlexMacroReferenceImpl(FLEX_MACRO_REFERENCE)
            PsiElement(id)('COMMENTCONTENT')
          PsiElement(})('}')
    PsiWhiteSpace('\n')
    JFlexMacroDefinitionImpl(FLEX_MACRO_DEFINITION)
      PsiElement(id)('QUASI_LITERAL_CHAR')
      PsiElement(=)('=')
      JFlexChoiceExpressionImpl(FLEX_CHOICE_EXPRESSION)
        JFlexClassExpressionImpl(FLEX_CLASS_EXPRESSION)
          PsiElement([)('[')
          PsiElement(^)('^')
          PsiElement(char_esc)('\\')
          PsiElement(char)('$')
          PsiElement(char)('`')
          PsiElement(])(']')
        PsiWhiteSpace(' ')
        PsiElement(|)('|')
        PsiWhiteSpace(' ')
        JFlexSequenceExpressionImpl(FLEX_SEQUENCE_EXPRESSION)
          JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
            PsiElement(char_esc)('\\')
          PsiWhiteSpace(' ')
          JFlexMacroRefExpressionImpl(FLEX_MACRO_REF_EXPRESSION)
            PsiElement({)('{')
            JFlexMacroReferenceImpl(FLEX_MACRO_REFERENCE)
              PsiElement(id)('ANY_CHAR')
            PsiElement(})('}')
        PsiWhiteSpace(' ')
        PsiElement(|)('|')
        PsiWhiteSpace(' ')
        JFlexSequenceExpressionImpl(FLEX_SEQUENCE_EXPRESSION)
          JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
            PsiElement(char_esc)('\$')
          PsiWhiteSpace(' ')
          JFlexClassExpressionImpl(FLEX_CLASS_EXPRESSION)
            PsiElement([)('[')
            PsiElement(^)('^')
            PsiElement(char)('`')
            PsiElement(char)('{')
            PsiElement(char_class)('[:jletter:]')
            PsiElement(])(']')
    PsiWhiteSpace('\n')
    JFlexMacroDefinitionImpl(FLEX_MACRO_DEFINITION)
      PsiElement(id)('NO_STATE')
      PsiElement(=)('=')
      JFlexSequenceExpressionImpl(FLEX_SEQUENCE_EXPRESSION)
        JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
          PsiElement(char)('<')
        JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
          PsiElement(char)('TAG')
        JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
          PsiElement(char)('>')
    PsiWhiteSpace('\n')
    JFlexMacroDefinitionImpl(FLEX_MACRO_DEFINITION)
      PsiElement(id)('VARIABLE')
      PsiWhiteSpace(' ')
      PsiElement(=)('=')
      PsiWhiteSpace(' ')
      JFlexSequenceExpressionImpl(FLEX_SEQUENCE_EXPRESSION)
        JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
          PsiElement(string)('"$"')
        JFlexQuantifierExpressionImpl(FLEX_QUANTIFIER_EXPRESSION)
          JFlexParenExpressionImpl(FLEX_PAREN_EXPRESSION)
            PsiElement(()('(')
            JFlexSequenceExpressionImpl(FLEX_SEQUENCE_EXPRESSION)
              JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
                PsiElement(char)(':')
              JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
                PsiElement(char)(':')
            PsiElement())(')')
          PsiElement(?)('?')
        JFlexMacroRefExpressionImpl(FLEX_MACRO_REF_EXPRESSION)
          PsiElement({)('{')
          JFlexMacroReferenceImpl(FLEX_MACRO_REFERENCE)
            PsiElement(id)('NAME')
          PsiElement(})('}')
        JFlexQuantifierExpressionImpl(FLEX_QUANTIFIER_EXPRESSION)
          JFlexParenExpressionImpl(FLEX_PAREN_EXPRESSION)
            PsiElement(()('(')
            JFlexSequenceExpressionImpl(FLEX_SEQUENCE_EXPRESSION)
              JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
                PsiElement(char)(':')
              JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
                PsiElement(char)(':')
              JFlexMacroRefExpressionImpl(FLEX_MACRO_REF_EXPRESSION)
                PsiElement({)('{')
                JFlexMacroReferenceImpl(FLEX_MACRO_REFERENCE)
                  PsiElement(id)('NAME')
                PsiElement(})('}')
            PsiElement())(')')
          PsiElement(*)('*')
    PsiWhiteSpace('\n')
    JFlexMacroDefinitionImpl(FLEX_MACRO_DEFINITION)
      PsiElement(id)('BOOL')
      PsiWhiteSpace('            ')
      PsiElement(=)('=')
      PsiWhiteSpace(' ')
      JFlexChoiceExpressionImpl(FLEX_CHOICE_EXPRESSION)
        JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
          PsiElement(char)('true')
        PsiElement(|)('|')
        JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
          PsiElement(char)('yes')
        PsiElement(|)('|')
        JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
          PsiElement(char)('on')
        PsiElement(|)('|')
        JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
          PsiElement(char)('false')
        PsiElement(|)('|')
        JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
          PsiElement(char)('no')
        PsiElement(|)('|')
        JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
          PsiElement(char)('off')
        PsiElement(|)('|')
        JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
          PsiElement(char)('undefined')
        PsiElement(|)('|')
        JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
          PsiElement(char)('null')
    PsiWhiteSpace('\n')
    JFlexMacroDefinitionImpl(FLEX_MACRO_DEFINITION)
      PsiElement(id)('SYNTAX')
      PsiWhiteSpace(' ')
      PsiElement(=)('=')
      PsiWhiteSpace(' ')
      JFlexChoiceExpressionImpl(FLEX_CHOICE_EXPRESSION)
        JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
          PsiElement(char)(',')
        PsiElement(|)('|')
        JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
          PsiElement(char_esc)('\.')
    PsiWhiteSpace('\n')
    JFlexMacroDefinitionImpl(FLEX_MACRO_DEFINITION)
      PsiElement(id)('M')
      PsiElement(=)('=')
      JFlexParenExpressionImpl(FLEX_PAREN_EXPRESSION)
        PsiElement(()('(')
        JFlexSequenceExpressionImpl(FLEX_SEQUENCE_EXPRESSION)
          JFlexQuantifierExpressionImpl(FLEX_QUANTIFIER_EXPRESSION)
            JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
              PsiElement(char)('-')
            PsiElement(?)('?')
          JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
            PsiElement(char)('0b')
          JFlexQuantifierExpressionImpl(FLEX_QUANTIFIER_EXPRESSION)
            JFlexClassExpressionImpl(FLEX_CLASS_EXPRESSION)
              PsiElement([)('[')
              PsiElement(char)('01')
              PsiElement(])(']')
            PsiElement(+)('+')
        PsiElement())(')')
  PsiWhiteSpace('\n\n')
  PsiElement(%%)('%%')
  PsiWhiteSpace('\n')
  JFlexLexicalRulesSectionImpl(FLEX_LEXICAL_RULES_SECTION)
    JFlexRuleImpl(FLEX_RULE)
      JFlexStateListImpl(FLEX_STATE_LIST)
        PsiElement(<)('<')
        JFlexStateReferenceImpl(FLEX_STATE_REFERENCE)
          PsiElement(id)('YYINITIAL')
        PsiElement(>)('>')
      PsiWhiteSpace(' ')
      PsiElement({)('{')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      JFlexRuleImpl(FLEX_RULE)
        JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
          PsiElement(string)('"empty_braces"')
        PsiWhiteSpace('          ')
        JFlexJavaCodeImpl(FLEX_JAVA_CODE)
          PsiElement({)('{')
          PsiElement(code block)(' /* ignored*/ ')
          PsiElement(})('}')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      JFlexRuleImpl(FLEX_RULE)
        JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
          PsiElement(string)('"double_braces"')
        PsiWhiteSpace('         ')
        JFlexJavaCodeImpl(FLEX_JAVA_CODE)
          PsiElement({)('{')
          PsiElement(code block)('{ return com.intellij.psi.TokenType.WHITE_SPACE; }')
          PsiElement(})('}')
      PsiWhiteSpace('\n\n')
      PsiWhiteSpace('\t')
      PsiComment(line_comment)('// tab-indent')
      PsiWhiteSpace('\n\n')
      PsiWhiteSpace('  ')
      JFlexRuleImpl(FLEX_RULE)
        JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
          PsiElement(string)('"if_clause"')
        PsiWhiteSpace('             ')
        JFlexJavaCodeImpl(FLEX_JAVA_CODE)
          PsiElement({)('{')
          PsiElement(code block)(' if (yystate() != ANNO_PATTERN) { yybegin(PATH_ELEMENT); } return IF_CLAUSE; ')
          PsiElement(})('}')
      PsiWhiteSpace('\n\n')
      PsiWhiteSpace('  ')
      JFlexRuleImpl(FLEX_RULE)
        JFlexParenExpressionImpl(FLEX_PAREN_EXPRESSION)
          PsiElement(()('(')
          JFlexSequenceExpressionImpl(FLEX_SEQUENCE_EXPRESSION)
            JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
              PsiElement(char)('<')
            JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
              PsiElement(char)('#')
            JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
              PsiElement(char)('noparse')
            JFlexQuantifierExpressionImpl(FLEX_QUANTIFIER_EXPRESSION)
              JFlexParenExpressionImpl(FLEX_PAREN_EXPRESSION)
                PsiElement(()('(')
                JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
                  PsiElement(char)('>')
                PsiElement())(')')
              PsiElement(?)('?')
          PsiElement())(')')
        PsiWhiteSpace('         ')
        JFlexJavaCodeImpl(FLEX_JAVA_CODE)
          PsiElement({)('{')
          PsiElement(code block)(' return checkStyle(ANGLE, NOPARSE_START); ')
          PsiElement(})('}')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      JFlexRuleImpl(FLEX_RULE)
        JFlexSequenceExpressionImpl(FLEX_SEQUENCE_EXPRESSION)
          JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
            PsiElement(char)('=')
          JFlexQuantifierExpressionImpl(FLEX_QUANTIFIER_EXPRESSION)
            JFlexParenExpressionImpl(FLEX_PAREN_EXPRESSION)
              PsiElement(()('(')
              JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
                PsiElement(char)('=')
              PsiElement())(')')
            PsiElement(?)('?')
        PsiWhiteSpace('                   ')
        JFlexJavaCodeImpl(FLEX_JAVA_CODE)
          PsiElement({)('{')
          PsiElement(code block)(' return EQ; ')
          PsiElement(})('}')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      JFlexRuleImpl(FLEX_RULE)
        JFlexChoiceExpressionImpl(FLEX_CHOICE_EXPRESSION)
          JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
            PsiElement(char)('true')
          PsiElement(|)('|')
          JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
            PsiElement(char)('false')
        PsiWhiteSpace('              ')
        JFlexJavaCodeImpl(FLEX_JAVA_CODE)
          PsiElement({)('{')
          PsiElement(code block)(' return BOOLEAN; ')
          PsiElement(})('}')
      PsiWhiteSpace('\n\n')
      PsiWhiteSpace('  ')
      JFlexRuleImpl(FLEX_RULE)
        JFlexSequenceExpressionImpl(FLEX_SEQUENCE_EXPRESSION)
          JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
            PsiElement(char)('%')
          JFlexMacroRefExpressionImpl(FLEX_MACRO_REF_EXPRESSION)
            PsiElement({)('{')
            JFlexMacroReferenceImpl(FLEX_MACRO_REFERENCE)
              PsiElement(id)('FUNCTION')
            PsiElement(})('}')
        PsiWhiteSpace('             ')
        JFlexJavaCodeImpl(FLEX_JAVA_CODE)
          PsiElement({)('{')
          PsiElement(})('}')
      PsiWhiteSpace('\n\n')
      PsiWhiteSpace('  ')
      JFlexRuleImpl(FLEX_RULE)
        JFlexStateListImpl(FLEX_STATE_LIST)
          PsiElement(<)('<')
          JFlexStateReferenceImpl(FLEX_STATE_REFERENCE)
            PsiElement(id)('LONG_TEMPLATE_ENTRY')
          PsiElement(>)('>')
        PsiWhiteSpace(' ')
        JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
          PsiElement(string)('"{"')
        PsiWhiteSpace('              ')
        JFlexJavaCodeImpl(FLEX_JAVA_CODE)
          PsiElement({)('{')
          PsiElement(code block)(' lBraceCount++; return LBRACE; ')
          PsiElement(})('}')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      JFlexRuleImpl(FLEX_RULE)
        JFlexStateListImpl(FLEX_STATE_LIST)
          PsiElement(<)('<')
          JFlexStateReferenceImpl(FLEX_STATE_REFERENCE)
            PsiElement(id)('LONG_TEMPLATE_ENTRY')
          PsiElement(>)('>')
        PsiWhiteSpace(' ')
        JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
          PsiElement(string)('"}"')
        PsiWhiteSpace('              ')
        JFlexJavaCodeImpl(FLEX_JAVA_CODE)
          PsiElement({)('{')
          PsiElement(code block)('\n                                             if (lBraceCount == 0) {\n                                               popState();\n                                               return LONG_TEMPLATE_ENTRY_END;\n                                             }\n                                             lBraceCount--;\n                                             return RBRACE;\n                                         ')
          PsiElement(})('}')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      JFlexRuleImpl(FLEX_RULE)
        JFlexStateListImpl(FLEX_STATE_LIST)
          PsiElement(<)('<')
          JFlexStateReferenceImpl(FLEX_STATE_REFERENCE)
            PsiElement(id)('STATE')
          PsiElement(>)('>')
        PsiWhiteSpace(' ')
        PsiElement({)('{')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('        ')
        JFlexRuleImpl(FLEX_RULE)
          JFlexParenExpressionImpl(FLEX_PAREN_EXPRESSION)
            PsiElement(()('(')
            JFlexSequenceExpressionImpl(FLEX_SEQUENCE_EXPRESSION)
              JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
                PsiElement(char_esc)('\[')
              JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
                PsiElement(char_esc)('\/')
              JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
                PsiElement(char)('@')
              JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
                PsiElement(char)(']')
            PsiElement())(')')
          PsiWhiteSpace(' ')
          JFlexJavaCodeImpl(FLEX_JAVA_CODE)
            PsiElement({)('{')
            PsiElement(code block)(' return 1; ')
            PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('        ')
        JFlexRuleImpl(FLEX_RULE)
          JFlexParenExpressionImpl(FLEX_PAREN_EXPRESSION)
            PsiElement(()('(')
            JFlexSequenceExpressionImpl(FLEX_SEQUENCE_EXPRESSION)
              JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
                PsiElement(char)('<')
              JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
                PsiElement(char_esc)('\/')
              JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
                PsiElement(char)('@')
              JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
                PsiElement(char)('>')
            PsiElement())(')')
          PsiWhiteSpace('  ')
          JFlexJavaCodeImpl(FLEX_JAVA_CODE)
            PsiElement({)('{')
            PsiElement(code block)(' return 1; ')
            PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(})('}')
      PsiWhiteSpace('\n\n')
      PsiWhiteSpace('  ')
      JFlexRuleImpl(FLEX_RULE)
        JFlexStateListImpl(FLEX_STATE_LIST)
          PsiElement(<)('<')
          JFlexStateReferenceImpl(FLEX_STATE_REFERENCE)
            PsiElement(id)('TAG_DOC_SPACE')
          PsiElement(>)('>')
        PsiWhiteSpace('  ')
        JFlexQuantifierExpressionImpl(FLEX_QUANTIFIER_EXPRESSION)
          JFlexMacroRefExpressionImpl(FLEX_MACRO_REF_EXPRESSION)
            PsiElement({)('{')
            JFlexMacroReferenceImpl(FLEX_MACRO_REFERENCE)
              PsiElement(id)('WHITE_DOC_SPACE_CHAR')
            PsiElement(})('}')
          PsiElement(+)('+')
        PsiWhiteSpace(' ')
        JFlexJavaCodeImpl(FLEX_JAVA_CODE)
          PsiElement({)('{')
          PsiElement(code block)('\n    if (checkAhead('<') || checkAhead('\"')) yybegin(COMMENT_DATA);\n    else if (checkAhead('\u007b') ) yybegin(COMMENT_DATA);  // lbrace - there's a error in JLex when typing lbrace directly\n    else yybegin(DOC_TAG_VALUE);\n    return myTokenTypes.space();\n  ')
          PsiElement(})('}')
      PsiWhiteSpace('\n\n')
      PsiWhiteSpace('  ')
      JFlexRuleImpl(FLEX_RULE)
        JFlexSequenceExpressionImpl(FLEX_SEQUENCE_EXPRESSION)
          JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
            PsiElement(string)('"{{!"')
          JFlexClassExpressionImpl(FLEX_CLASS_EXPRESSION)
            PsiElement([)('[')
            PsiElement(^)('^')
            PsiElement(string)('"--"')
            PsiElement(])(']')
          JFlexNotExpressionImpl(FLEX_NOT_EXPRESSION)
            PsiElement(~)('~')
            JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
              PsiElement(string)('"}}"')
        PsiWhiteSpace('   ')
        JFlexJavaCodeImpl(FLEX_JAVA_CODE)
          PsiElement({)('{')
          PsiElement(code block)(' ')
          PsiElement(})('}')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      JFlexRuleImpl(FLEX_RULE)
        JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
          PsiElement(string)('"<=>"')
        PsiWhiteSpace('                                   ')
        JFlexJavaCodeImpl(FLEX_JAVA_CODE)
          PsiElement({)('{')
          PsiElement(code block)('   return myTM.process(tCMP); ')
          PsiElement(})('}')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      JFlexRuleImpl(FLEX_RULE)
        JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
          PsiElement(string)('"\""')
        PsiWhiteSpace('                                    ')
        JFlexJavaCodeImpl(FLEX_JAVA_CODE)
          PsiElement({)('{')
          PsiElement(code block)('  if ("a".indexOf('"') <= -1) { return '-'; } ')
          PsiElement(})('}')
      PsiWhiteSpace('\n\n')
      PsiWhiteSpace('  ')
      JFlexRuleImpl(FLEX_RULE)
        JFlexStateListImpl(FLEX_STATE_LIST)
          PsiElement(<)('<')
          JFlexStateReferenceImpl(FLEX_STATE_REFERENCE)
            PsiElement(id)('INTERPOLATION')
          PsiElement(>)('>')
        PsiWhiteSpace(' ')
        PsiElement({)('{')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('    ')
        JFlexRuleImpl(FLEX_RULE)
          JFlexSequenceExpressionImpl(FLEX_SEQUENCE_EXPRESSION)
            JFlexQuantifierExpressionImpl(FLEX_QUANTIFIER_EXPRESSION)
              JFlexClassExpressionImpl(FLEX_CLASS_EXPRESSION)
                PsiElement([)('[')
                PsiElement(^)('^')
                PsiElement(char_esc)('\n')
                PsiElement(char)('}')
                PsiElement(])(']')
              PsiElement(*)('*')
            PsiWhiteSpace(' ')
            JFlexQuantifierExpressionImpl(FLEX_QUANTIFIER_EXPRESSION)
              JFlexLiteralExpressionImpl(FLEX_LITERAL_EXPRESSION)
                PsiElement(string)('"}"')
              PsiElement(?)('?')
          PsiWhiteSpace(' ')
          JFlexJavaCodeImpl(FLEX_JAVA_CODE)
            PsiElement({)('{')
            PsiElement(code block)(' if (zzBuffer.charAt(getTokenEnd()-1) == '}') yypushback(1); yybegin(stateToGo.pop()); return JadeTokenTypes.JS_EXPR; ')
            PsiElement(})('}')
        PsiWhiteSpace('\n')
        PsiWhiteSpace('  ')
        PsiElement(})('}')
      PsiWhiteSpace('\n\n\n')
      PsiWhiteSpace('  ')
      JFlexRuleImpl(FLEX_RULE)
        JFlexQuantifierExpressionImpl(FLEX_QUANTIFIER_EXPRESSION)
          JFlexMacroRefExpressionImpl(FLEX_MACRO_REF_EXPRESSION)
            PsiElement({)('{')
            JFlexMacroReferenceImpl(FLEX_MACRO_REFERENCE)
              PsiElement(id)('HexDigit')
            PsiElement(})('}')
          PsiElement({)('{')
          PsiElement(number)('1')
          PsiElement(,)(',')
          PsiElement(number)('6')
          PsiElement(})('}')
        PsiWhiteSpace(' ')
        JFlexJavaCodeImpl(FLEX_JAVA_CODE)
          PsiElement({)('{')
          PsiElement(code block)(' ')
          PsiElement(})('}')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      JFlexRuleImpl(FLEX_RULE)
        JFlexQuantifierExpressionImpl(FLEX_QUANTIFIER_EXPRESSION)
          JFlexMacroRefExpressionImpl(FLEX_MACRO_REF_EXPRESSION)
            PsiElement({)('{')
            JFlexMacroReferenceImpl(FLEX_MACRO_REFERENCE)
              PsiElement(id)('HexDigit')
            PsiElement(})('}')
          PsiElement({)('{')
          PsiWhiteSpace(' ')
          PsiElement(number)('1')
          PsiWhiteSpace(' ')
          PsiElement(,)(',')
          PsiWhiteSpace(' ')
          PsiElement(number)('6')
          PsiWhiteSpace(' ')
          PsiElement(})('}')
        PsiWhiteSpace(' ')
        JFlexJavaCodeImpl(FLEX_JAVA_CODE)
          PsiElement({)('{')
          PsiElement(code block)(' ')
          PsiElement(})('}')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      JFlexRuleImpl(FLEX_RULE)
        JFlexClassExpressionImpl(FLEX_CLASS_EXPRESSION)
          PsiElement([)('[')
          PsiElement(char_class)('\w')
          PsiElement(char)('_')
          PsiElement(--)('--')
          PsiElement(char_class)('\d')
          PsiElement(])(']')
        PsiWhiteSpace(' ')
        JFlexJavaCodeImpl(FLEX_JAVA_CODE)
          PsiElement({)('{')
          PsiElement(code block)(' ')
          PsiElement(})('}')
      PsiWhiteSpace('\n')
      PsiWhiteSpace('  ')
      JFlexRuleImpl(FLEX_RULE)
        PsiElement(<<EOF>>)('<<EOF>>')
        PsiWhiteSpace(' ')
        JFlexJavaCodeImpl(FLEX_JAVA_CODE)
          PsiElement({)('{')
          PsiElement(code block)(' ')
          PsiElement(})('}')
      PsiWhiteSpace('\n')
      PsiElement(})('}')